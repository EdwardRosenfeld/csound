Csound 6 TODO list

1) loadable instruments:
 - AST tree memory recovery needs fixing. *** FIXED ***
 - memory recovery of pools
 - test extensively (including UDOs and namedins)
 - add support for fast loadable format
 - document AST tree format to allow users to parse into it.
 - API functions
 - thread safety ?
 - UDOs are not replaced, memory recovery needed? 
 - add opcode to compile/load an opcode
 - API step by step construction of TREE?
 - safe deletion of TREE *** FIXED ***
 - memory recovery of POOLs

2) allow any number of strings in score events (except p2,p3). 
     *** FIXED ***
  - do we need a new parser for score? (started one but a pain)

3) test sample-accurate opcodes, or document those not working
  - check that kperf code can be used in  multicore mode  in csound.c
  (possibly changes need to be propagated?) 

4) Use instrument-local structure rather than global (ksmps mainly)

5) New DAG control without memory use

6) Whittle code needs rewrite to avoid copyright infringement and to
make it easier to maintain *** FIXED ***

7) Analysis formats need to be byte-order/machine independent, and
reader opcodes need to accept them
   *** Hetro analysis fixed *** 

8) syntax error checks (undef variables etc) need to be put back.

9) csoundInputMessage() is broken. *** FIXED ***

10) check changing p3 works with early ending code, and event/scedule

11) realtime priority mode
  -  asynchronous disk access IO mechanism. *** DONE *** soundin, fout, foutk, fin,
and fink modified. diskin, diskin2 and pvsfwrite  now have their own
dedicated async read/write. diskgrain and pvsdiskin have not been
changed but they have realtime safe versions in syncgrain and
pvsfread. 

  - asynchronous init pass in RT mode - added but needs further
    testing/evaluation

  - other features?

12) More user control over size of graphs (request from Menno)

13) Functions of more than 1 argument -- actually works, and taninv2
and divz are also available as functions of 2 args

14) Expose OPARMS or OPARMS-like struct to API users, so that they can
configure csound with typed system (that in turn can be inspected)
**** DONE  new configuration functions  and struct ****


rc1 aimed for 28 Feb

=====
Speculation List

2) Allow changes in possible options after start, eg debugging for
next instrument

